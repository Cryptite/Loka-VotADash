#!/usr/bin/env node
var debug = require('debug')('Loka-VotADash');
var app = require('../app');
var fs = require('fs'),
    request = require('request');

var mongojs = require('mongojs');

var uri = "mongodb://iron.minecraftarium.com:27017/loka";
var db = mongojs.connect(uri, ["stats"]);

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function () {
    debug('Express server listening on port ' + server.address().port);
});

var io = require('socket.io').listen(app.listen(3001));

io.sockets.on('connection', function (socket) {
    socket.on('announce', function (message) {
        socket.broadcast.emit('announce', message);
    });
    socket.on('scores', function (message) {
        socket.broadcast.emit('scores', message);
    });
    socket.on('stats', function (message) {
        socket.broadcast.emit('stats', message);
    });
    socket.on('artifact', function (message) {
        socket.broadcast.emit('artifact', message);
    });
    socket.on('avatar', function (message) {
        getAvatar(socket, message);
    });
});

var getAvatar = function (socket, player) {
    var stevePath = "../public/images/steve.png";

    var avatarPath = "../public/images/" + player + ".png";
    if (fs.existsSync(avatarPath)
        && fs.statSync(avatarPath)["size"] > 0
        && fs.statSync(avatarPath)["size"] != fs.statSync(stevePath)["size"]) {
        socket.emit("update_avatar", {name: player, path: "./images/" + player + ".png"});
        return;
    }

    //Copy steve skin as player skin first
    fs.createReadStream(stevePath).pipe(fs.createWriteStream(avatarPath));

    //Then download over it
    console.log("Downloading avatar for " + player);
    download(socket, player);
};

var download = function (socket, player) {
    request.head("https://minotar.net/avatar/" + player + "/49.png", function (err, res, body) {
        request("https://minotar.net/avatar/" + player + "/49.png").pipe(fs.createWriteStream("../public/images/" + player + "_dl.png")).on('close', function () {
            if (fs.existsSync("../public/images/" + player + "_dl.png")) {
                console.log("Renaming " + player);
                fs.rename("../public/images/" + player + "_dl.png", "../public/images/" + player + ".png");
                socket.emit("update_avatar", {name: player, path: "./images/" + player + ".png"});
            }
        });
    });
};